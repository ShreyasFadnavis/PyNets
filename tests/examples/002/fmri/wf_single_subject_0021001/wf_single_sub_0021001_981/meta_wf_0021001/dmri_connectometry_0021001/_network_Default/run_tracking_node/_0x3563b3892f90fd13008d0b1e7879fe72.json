[
    [
        "B0_mask",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/dmri_tmp/B0_bet_mask.nii.gz",
            "254c3bc4f836089f8c07264b788fc8c2"
        ]
    ],
    [
        "ID",
        "0021001"
    ],
    [
        "atlas",
        "DesikanKlein2012"
    ],
    [
        "atlas_mni",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/reg_dmri/anat_reg/DesikanKlein2012_t1w_mni.nii.gz",
            "47092c4bdd075aa61db0731f7bd8a8a5"
        ]
    ],
    [
        "binary",
        false
    ],
    [
        "conn_model",
        "csd"
    ],
    [
        "coords",
        [
            [
                "41.4603671909",
                "-7.7177768031",
                "44.1708753681"
            ],
            [
                "22.6098634963",
                "-4.5623073536",
                "-31.9564068692"
            ],
            [
                "46.2461318734",
                "-65.4156153297",
                "30.4098428945"
            ],
            [
                "-3.6434285714",
                "-66.6897142857",
                "-23.6074285714"
            ],
            [
                "-4.4676425270",
                "-50.6399589111",
                "-13.2000513611"
            ],
            [
                "-50.2513679091",
                "-10.3992891549",
                "-6.6312491231"
            ],
            [
                "25.5100781250",
                "-60.2636718750",
                "53.3001562500"
            ],
            [
                "-29.8504807002",
                "-89.2247094275",
                "1.5027263596"
            ],
            [
                "32.8091522695",
                "-86.4223171713",
                "2.0475571243"
            ],
            [
                "-57.4605569733",
                "-27.8087762121",
                "-12.6587151892"
            ],
            [
                "5.8621818182",
                "37.5320000000",
                "2.9570909091"
            ],
            [
                "45.2940634681",
                "-21.8887214268",
                "43.8319517709"
            ],
            [
                "-6.1731694281",
                "-25.6816319259",
                "57.7997505790"
            ],
            [
                "10.7746656176",
                "-15.9367427223",
                "-9.7904012589"
            ],
            [
                "46.0602240896",
                "-17.9747899160",
                "8.1120448179"
            ],
            [
                "13.6988191034",
                "-66.4238687428",
                "-5.0391890480"
            ],
            [
                "49.0241624365",
                "-28.1792893401",
                "-27.2967851100"
            ],
            [
                "-13.2938431774",
                "-67.5089336520",
                "-5.8789120291"
            ],
            [
                "26.3080739738",
                "-20.5345060893",
                "-12.8123590438"
            ],
            [
                "5.4625651042",
                "21.5432942708",
                "28.0429687500"
            ],
            [
                "-48.3254319281",
                "-28.4269523151",
                "-28.3011748445"
            ],
            [
                "7.9032258065",
                "-44.9835483871",
                "19.3064516129"
            ]
        ]
    ],
    [
        "curv_thr_list",
        [
            60,
            30,
            10
        ]
    ],
    [
        "dens_thresh",
        true
    ],
    [
        "directget",
        "prob"
    ],
    [
        "disp_filt",
        false
    ],
    [
        "dwi_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/iso_eddy_corrected_data_denoised.nii.gz",
            "4470798ea0ea15bff704797df734fbf8"
        ]
    ],
    [
        "fa_path",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/dmri_tmp/tensor_fa.nii.gz",
            "fd8c84a14821241fb29bad49011e5418"
        ]
    ],
    [
        "function_str",
        "def run_track(B0_mask, gm_in_dwi, vent_csf_in_dwi, wm_in_dwi, tiss_class, labels_im_file_wm_gm_int,\n              labels_im_file, target_samples, curv_thr_list, step_list, track_type, max_length, maxcrossing, directget,\n              conn_model, gtab_file, dwi_file, network, node_size, dens_thresh, ID, roi, min_span_tree, disp_filt, parc,\n              prune, atlas, uatlas, labels, coords, norm, binary, atlas_mni, life_run, min_length,\n              fa_path):\n    '''\n    Run all ensemble tractography and filtering routines.\n\n    Parameters\n    ----------\n    B0_mask : str\n        File path to B0 brain mask.\n    gm_in_dwi : str\n        File path to grey-matter tissue segmentation Nifti1Image.\n    vent_csf_in_dwi : str\n        File path to ventricular CSF tissue segmentation Nifti1Image.\n    wm_in_dwi : str\n        File path to white-matter tissue segmentation Nifti1Image.\n    tiss_class : str\n        Tissue classification method.\n    labels_im_file_wm_gm_int : str\n        File path to atlas parcellation Nifti1Image in T1w-warped native diffusion space, restricted to wm-gm interface.\n    labels_im_file : str\n        File path to atlas parcellation Nifti1Image in T1w-warped native diffusion space.\n    target_samples : int\n        Total number of streamline samples specified to generate streams.\n    curv_thr_list : list\n        List of integer curvature thresholds used to perform ensemble tracking.\n    step_list : list\n        List of float step-sizes used to perform ensemble tracking.\n    track_type : str\n        Tracking algorithm used (e.g. 'local' or 'particle').\n    max_length : int\n        Maximum fiber length threshold in mm to restrict tracking.\n    maxcrossing : int\n        Maximum number if diffusion directions that can be assumed per voxel while tracking.\n    directget : str\n        The statistical approach to tracking. Options are: det (deterministic), closest (clos), boot (bootstrapped),\n        and prob (probabilistic).\n    conn_model : str\n        Connectivity reconstruction method (e.g. 'csa', 'tensor', 'csd').\n    gtab_file : str\n        File path to pickled DiPy gradient table object.\n    dwi_file : str\n        File path to diffusion weighted image.\n    network : str\n        Resting-state network based on Yeo-7 and Yeo-17 naming (e.g. 'Default')\n        used to filter nodes in the study of brain subgraphs.\n    node_size : int\n        Spherical centroid node size in the case that coordinate-based centroids\n        are used as ROI's for tracking.\n    dens_thresh : bool\n        Indicates whether a target graph density is to be used as the basis for\n        thresholding.\n    ID : str\n        A subject id or other unique identifier.\n    roi : str\n        File path to binarized/boolean region-of-interest Nifti1Image file.\n    min_span_tree : bool\n        Indicates whether local thresholding from the Minimum Spanning Tree\n        should be used.\n    disp_filt : bool\n        Indicates whether local thresholding using a disparity filter and\n        'backbone network' should be used.\n    parc : bool\n        Indicates whether to use parcels instead of coordinates as ROI nodes.\n    prune : bool\n        Indicates whether to prune final graph of disconnected nodes/isolates.\n    atlas : str\n        Name of atlas parcellation used.\n    uatlas : str\n        File path to atlas parcellation Nifti1Image in MNI template space.\n    labels : list\n        List of string labels corresponding to graph nodes.\n    coords : list\n        List of (x, y, z) tuples corresponding to a coordinate atlas used or\n        which represent the center-of-mass of each parcellation node.\n    norm : int\n        Indicates method of normalizing resulting graph.\n    binary : bool\n        Indicates whether to binarize resulting graph edges to form an\n        unweighted graph.\n    atlas_mni : str\n        File path to atlas parcellation Nifti1Image in T1w-warped MNI space.\n    life_run : bool\n        Indicates whether to perform Linear Fascicle Evaluation (LiFE).\n    min_length : int\n        Minimum fiber length threshold in mm.\n    fa_path : str\n        File path to FA Nifti1Image.\n\n    Returns\n    -------\n    streams : str\n        File path to save streamline array sequence in .trk format.\n    track_type : str\n        Tracking algorithm used (e.g. 'local' or 'particle').\n    target_samples : int\n        Total number of streamline samples specified to generate streams.\n    conn_model : str\n        Connectivity reconstruction method (e.g. 'csa', 'tensor', 'csd').\n    dir_path : str\n        Path to directory containing subject derivative data for a given pynets run.\n    network : str\n        Resting-state network based on Yeo-7 and Yeo-17 naming (e.g. 'Default')\n        used to filter nodes in the study of brain subgraphs.\n    node_size : int\n        Spherical centroid node size in the case that coordinate-based centroids\n        are used as ROI's for tracking.\n    dens_thresh : bool\n        Indicates whether a target graph density is to be used as the basis for\n        thresholding.\n    ID : str\n        A subject id or other unique identifier.\n    roi : str\n        File path to binarized/boolean region-of-interest Nifti1Image file.\n    min_span_tree : bool\n        Indicates whether local thresholding from the Minimum Spanning Tree\n        should be used.\n    disp_filt : bool\n        Indicates whether local thresholding using a disparity filter and\n        'backbone network' should be used.\n    parc : bool\n        Indicates whether to use parcels instead of coordinates as ROI nodes.\n    prune : bool\n        Indicates whether to prune final graph of disconnected nodes/isolates.\n    atlas : str\n        Name of atlas parcellation used.\n    uatlas : str\n        File path to atlas parcellation Nifti1Image in MNI template space.\n    labels : list\n        List of string labels corresponding to graph nodes.\n    coords : list\n        List of (x, y, z) tuples corresponding to a coordinate atlas used or\n        which represent the center-of-mass of each parcellation node.\n    norm : int\n        Indicates method of normalizing resulting graph.\n    binary : bool\n        Indicates whether to binarize resulting graph edges to form an\n        unweighted graph.\n    atlas_mni : str\n        File path to atlas parcellation Nifti1Image in T1w-warped MNI space.\n    curv_thr_list : list\n        List of integer curvature thresholds used to perform ensemble tracking.\n    step_list : list\n        List of float step-sizes used to perform ensemble tracking.\n    fa_path : str\n        File path to FA Nifti1Image.\n    dm_path : str\n        File path to fiber density map Nifti1Image.\n    '''\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n    try:\n        import cPickle as pickle\n    except ImportError:\n        import _pickle as pickle\n    from dipy.io import load_pickle\n    from colorama import Fore, Style\n    from dipy.data import get_sphere\n    from pynets import utils\n    from pynets.dmri.track import prep_tissues, reconstruction, filter_streamlines, track_ensemble\n\n    # Load gradient table\n    gtab = load_pickle(gtab_file)\n\n    # Fit diffusion model\n    mod_fit = reconstruction(conn_model, gtab, dwi_file, wm_in_dwi)\n\n    # Load atlas parcellation (and its wm-gm interface reduced version for seeding)\n    atlas_img = nib.load(labels_im_file)\n    atlas_data = atlas_img.get_fdata().astype('int')\n    atlas_img_wm_gm_int = nib.load(labels_im_file_wm_gm_int)\n    atlas_data_wm_gm_int = atlas_img_wm_gm_int.get_fdata().astype('int')\n\n    # Build mask vector from atlas for later roi filtering\n    parcels = []\n    i = 0\n    for roi_val in np.unique(atlas_data)[1:]:\n        parcels.append(atlas_data == roi_val)\n        i = i + 1\n\n    # Get sphere\n    sphere = get_sphere('repulsion724')\n\n    # Instantiate tissue classifier\n    tiss_classifier = prep_tissues(B0_mask, gm_in_dwi, vent_csf_in_dwi, wm_in_dwi, tiss_class)\n\n    if np.sum(atlas_data) == 0:\n        raise ValueError('ERROR: No non-zero voxels found in atlas. Check any roi masks and/or wm-gm interface images '\n                         'to verify overlap with dwi-registered atlas.')\n\n    # Iteratively build a list of streamlines for each ROI while tracking\n    print(\"%s%s%s%s\" % (Fore.GREEN, 'Target number of samples: ', Fore.BLUE, target_samples))\n    print(Style.RESET_ALL)\n    print(\"%s%s%s%s\" % (Fore.GREEN, 'Using curvature threshold(s): ', Fore.BLUE, curv_thr_list))\n    print(Style.RESET_ALL)\n    print(\"%s%s%s%s\" % (Fore.GREEN, 'Using step size(s): ', Fore.BLUE, step_list))\n    print(Style.RESET_ALL)\n    print(\"%s%s%s%s\" % (Fore.GREEN, 'Tracking type: ', Fore.BLUE, track_type))\n    print(Style.RESET_ALL)\n    if directget == 'prob':\n        print(\"%s%s%s\" % ('Using ', Fore.MAGENTA, 'Probabilistic Direction...'))\n    elif directget == 'boot':\n        print(\"%s%s%s\" % ('Using ', Fore.MAGENTA, 'Bootstrapped Direction...'))\n    elif directget == 'closest':\n        print(\"%s%s%s\" % ('Using ', Fore.MAGENTA, 'Closest Peak Direction...'))\n    elif directget == 'det':\n        print(\"%s%s%s\" % ('Using ', Fore.MAGENTA, 'Deterministic Maximum Direction...'))\n    print(Style.RESET_ALL)\n\n    # Commence Ensemble Tractography\n    streamlines = track_ensemble(target_samples, atlas_data_wm_gm_int, parcels, mod_fit, tiss_classifier, sphere,\n                                 directget, curv_thr_list, step_list, track_type, maxcrossing, max_length)\n    print('Tracking Complete')\n\n    # Perform streamline filtering routines\n    dir_path = utils.do_dir_path(atlas, dwi_file)\n    [streams, dir_path, dm_path] = filter_streamlines(dwi_file, dir_path, gtab, streamlines, life_run, min_length,\n                                                      conn_model, target_samples, node_size, curv_thr_list, step_list,\n                                                      network, roi)\n\n    return streams, track_type, target_samples, conn_model, dir_path, network, node_size, dens_thresh, ID, roi, min_span_tree, disp_filt, parc, prune, atlas, uatlas, labels, coords, norm, binary, atlas_mni, curv_thr_list, step_list, fa_path, dm_path\n"
    ],
    [
        "gm_in_dwi",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/reg_dmri/dmri_tmp/reg/imgs/t1w_gm_in_dwi.nii.gz",
            "9aedd9fde4db06da3aabcb5a5c628a8a"
        ]
    ],
    [
        "gtab_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/dmri_tmp/gtab.pkl",
            "7d09ffc631f122e798e7a4e9d6c2dfe3"
        ]
    ],
    [
        "labels",
        [
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan"
        ]
    ],
    [
        "labels_im_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/reg_dmri/dmri_tmp/reg/imgs/DesikanKlein2012_dwi_track.nii.gz",
            "f5c0e50a80900d7689f492c3b5b145db"
        ]
    ],
    [
        "labels_im_file_wm_gm_int",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/reg_dmri/dmri_tmp/reg/imgs/DesikanKlein2012_dwi_track_wmgm_int.nii.gz",
            "275777e7e02365ffba77f42dd8100a36"
        ]
    ],
    [
        "life_run",
        false
    ],
    [
        "max_length",
        200
    ],
    [
        "maxcrossing",
        2
    ],
    [
        "min_length",
        20
    ],
    [
        "min_span_tree",
        false
    ],
    [
        "network",
        null
    ],
    [
        "node_size",
        null
    ],
    [
        "norm",
        0
    ],
    [
        "parc",
        true
    ],
    [
        "prune",
        "1"
    ],
    [
        "roi",
        null
    ],
    [
        "step_list",
        [
            "0.2000000000",
            "0.3000000000",
            "0.4000000000",
            "0.5000000000"
        ]
    ],
    [
        "target_samples",
        "100000"
    ],
    [
        "tiss_class",
        "cmc"
    ],
    [
        "track_type",
        "particle"
    ],
    [
        "uatlas",
        [
            "/Users/derekpisner/Applications/PyNets/pynets/atlases/DesikanKlein2012.nii.gz",
            "8b05327694ff8612e04249dae9d49822"
        ]
    ],
    [
        "vent_csf_in_dwi",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/reg_dmri/dmri_tmp/reg/imgs/t1w_vent_csf_in_dwi.nii.gz",
            "4704846a8719199d34528921a9a6b43d"
        ]
    ],
    [
        "wm_in_dwi",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/reg_dmri/dmri_tmp/reg/imgs/t1w_wm_in_dwi.nii.gz",
            "20d49ee991a901030f6509c8022a3b39"
        ]
    ]
]