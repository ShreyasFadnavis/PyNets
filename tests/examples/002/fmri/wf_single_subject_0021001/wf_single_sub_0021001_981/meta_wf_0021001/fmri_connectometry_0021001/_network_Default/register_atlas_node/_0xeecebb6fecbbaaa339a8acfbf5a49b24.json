[
    [
        "anat_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/anat/std_fmri/s002_anat_brain_pre_reor_5740.nii.gz",
            "8a4844287e5f60cb391da5dbf86131a9"
        ]
    ],
    [
        "atlas",
        "DesikanKlein2012"
    ],
    [
        "basedir_path",
        "/Users/derekpisner/Applications/PyNets/tests/examples/002/fmri/reg_fmri"
    ],
    [
        "function_str",
        "def register_atlas_fmri(uatlas, atlas, node_size, basedir_path, anat_file, vox_size):\n    \"\"\"\n    A Function to register an atlas to T1w-warped MNI-space, and restrict the atlas to grey-matter only.\n\n    Parameters\n    ----------\n    uatlas : str\n        File path to atlas parcellation Nifti1Image in MNI template space.\n    atlas : str\n        Name of atlas parcellation used.\n    node_size : int\n        Spherical centroid node size in the case that coordinate-based centroids\n        are used as ROI's for tracking.\n    basedir_path : str\n        Path to directory to output direct-streamline normalized temp files and outputs.\n    anat_file : str\n        Path to a skull-stripped anatomical Nifti1Image.\n    vox_size : str\n        Voxel size in mm. (e.g. 2mm).\n\n    Returns\n    -------\n    aligned_atlas_t1mni_gm : str\n        File path to atlas parcellation Nifti1Image in T1w-warped MNI space, restricted only to grey-matter.\n    \"\"\"\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n    from pynets.registration import register\n    reg = register.FmriReg(basedir_path, anat_file, vox_size)\n\n    if node_size is not None:\n        atlas = \"%s%s%s\" % (atlas, '_', node_size)\n\n    # Apply warps/coregister atlas to t1w_mni\n    aligned_atlas_t1mni_gm = reg.atlas2t1wmni_align(uatlas, atlas)\n\n    return aligned_atlas_t1mni_gm\n"
    ],
    [
        "node_size",
        null
    ],
    [
        "uatlas",
        [
            "/Users/derekpisner/Applications/PyNets/pynets/atlases/DesikanKlein2012.nii.gz",
            "8b05327694ff8612e04249dae9d49822"
        ]
    ],
    [
        "vox_size",
        "2mm"
    ]
]