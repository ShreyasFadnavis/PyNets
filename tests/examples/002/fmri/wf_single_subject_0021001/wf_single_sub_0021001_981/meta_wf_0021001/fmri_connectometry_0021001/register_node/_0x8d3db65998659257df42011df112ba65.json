[
    [
        "anat_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/anat/std_fmri/s002_anat_brain_pre_reor_5740.nii.gz",
            "8a4844287e5f60cb391da5dbf86131a9"
        ]
    ],
    [
        "basedir_path",
        "/Users/derekpisner/Applications/PyNets/tests/examples/002/fmri/reg_fmri"
    ],
    [
        "function_str",
        "def register_all_fmri(basedir_path, anat_file, vox_size, overwrite=True):\n    \"\"\"\n    A Function to register an atlas to T1w-warped MNI-space, and restrict the atlas to grey-matter only.\n\n    Parameters\n    ----------\n    basedir_path : str\n        Path to directory to output direct-streamline normalized temp files and outputs.\n    anat_file : str\n        Path to a skull-stripped anatomical Nifti1Image.\n    vox_size : str\n        Voxel size in mm. (e.g. 2mm).\n    overwrite : bool\n        Indicates whether to overwrite existing registration files. Default is True.\n    \"\"\"\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n    import os.path as op\n    from pynets.registration import register\n    reg = register.FmriReg(basedir_path, anat_file, vox_size)\n\n    if (overwrite is True) or (op.isfile(reg.map_path) is False):\n        # Perform anatomical segmentation\n        reg.gen_tissue()\n\n    if (overwrite is True) or (op.isfile(reg.t1_aligned_mni) is False):\n        # Align t1w to dwi\n        reg.t1w2mni_align()\n\n    return\n"
    ],
    [
        "vox_size",
        "2mm"
    ]
]