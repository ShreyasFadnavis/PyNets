[
    [
        "ID",
        "0021001"
    ],
    [
        "atlas",
        "DesikanKlein2012"
    ],
    [
        "coords",
        [
            [
                "-40.0000000000",
                "32.0000000000",
                "-10.0000000000"
            ],
            [
                "46.0000000000",
                "-66.0000000000",
                "30.0000000000"
            ],
            [
                "52.0000000000",
                "-6.0000000000",
                "-8.0000000000"
            ],
            [
                "-12.0000000000",
                "34.0000000000",
                "42.0000000000"
            ],
            [
                "-36.0000000000",
                "12.0000000000",
                "48.0000000000"
            ],
            [
                "42.0000000000",
                "34.0000000000",
                "-12.0000000000"
            ],
            [
                "-50.0000000000",
                "-10.0000000000",
                "-6.0000000000"
            ],
            [
                "10.0000000000",
                "-58.0000000000",
                "38.0000000000"
            ],
            [
                "8.0000000000",
                "-44.0000000000",
                "20.0000000000"
            ],
            [
                "48.0000000000",
                "32.0000000000",
                "4.0000000000"
            ],
            [
                "6.0000000000",
                "-16.0000000000",
                "40.0000000000"
            ],
            [
                "-6.0000000000",
                "-18.0000000000",
                "40.0000000000"
            ],
            [
                "-46.0000000000",
                "14.0000000000",
                "12.0000000000"
            ],
            [
                "-46.0000000000",
                "32.0000000000",
                "6.0000000000"
            ],
            [
                "-8.0000000000",
                "-60.0000000000",
                "38.0000000000"
            ],
            [
                "-22.0000000000",
                "-32.0000000000",
                "-18.0000000000"
            ],
            [
                "-58.0000000000",
                "-28.0000000000",
                "-12.0000000000"
            ],
            [
                "-42.0000000000",
                "-70.0000000000",
                "32.0000000000"
            ],
            [
                "-6.0000000000",
                "40.0000000000",
                "6.0000000000"
            ],
            [
                "58.0000000000",
                "-26.0000000000",
                "-12.0000000000"
            ],
            [
                "6.0000000000",
                "38.0000000000",
                "2.0000000000"
            ],
            [
                "-6.0000000000",
                "-46.0000000000",
                "20.0000000000"
            ],
            [
                "6.0000000000",
                "38.0000000000",
                "-18.0000000000"
            ],
            [
                "-6.0000000000",
                "42.0000000000",
                "-16.0000000000"
            ]
        ]
    ],
    [
        "dir_path",
        "/Users/derekpisner/Applications/PyNets/tests/examples/002/fmri/DesikanKlein2012"
    ],
    [
        "function_str",
        "def node_gen(coords, parcel_list, labels, dir_path, ID, parc, atlas, uatlas):\n    \"\"\"\n    In the case that masking was not applied, this function generate nodes based on atlas definitions established by\n    fetch_nodes_and_labels.\n\n    Parameters\n    ----------\n    coords : list\n        List of (x, y, z) tuples in mm-space corresponding to a coordinate atlas used or\n        which represent the center-of-mass of each parcellation node.\n    parcel_list : list\n        List of 3D boolean numpy arrays or binarized Nifti1Images corresponding to ROI masks.\n    labels : list\n        List of string labels corresponding to ROI nodes.\n    dir_path : str\n        Path to directory containing subject derivative data for given run.\n    ID : str\n        A subject id or other unique identifier.\n    parc : bool\n        Indicates whether to use parcels instead of coordinates as ROI nodes.\n    atlas : str\n        Name of a Nilearn-hosted coordinate or parcellation/label-based atlas supported for fetching.\n        See Nilearn's datasets.atlas module for more detailed reference.\n    uatlas : str\n        File path to atlas parcellation Nifti1Image in MNI template space.\n\n    Returns\n    -------\n    net_parcels_map_nifti : Nifti1Image\n        A nibabel-based nifti image consisting of a 3D array with integer voxel intensities corresponding to ROI\n        membership.\n    coords : list\n        List of (x, y, z) tuples in mm-space corresponding to a coordinate atlas used or\n        which represent the center-of-mass of each parcellation node.\n    labels : list\n        List of string labels corresponding to ROI nodes.\n    atlas : str\n        Name of a Nilearn-hosted coordinate or parcellation/label-based atlas supported for fetching.\n        See Nilearn's datasets.atlas module for more detailed reference.\n    uatlas : str\n        File path to atlas parcellation Nifti1Image in MNI template space.\n    \"\"\"\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n    try:\n        import cPickle as pickle\n    except ImportError:\n        import _pickle as pickle\n    from pynets import nodemaker\n    pick_dump = False\n\n    if parc is True:\n        [net_parcels_map_nifti, _] = nodemaker.create_parcel_atlas(parcel_list)\n    else:\n        net_parcels_map_nifti = None\n        print('No additional roi masking...')\n\n    coords = list(tuple(x) for x in coords)\n    if pick_dump is True:\n        # Save coords to pickle\n        coords_path = \"%s%s\" % (dir_path, '/atlas_coords_wb.pkl')\n        with open(coords_path, 'wb') as f:\n            pickle.dump(coords, f, protocol=2)\n        # Save labels to pickle\n        labels_path = \"%s%s\" % (dir_path, '/atlas_labelnames_wb.pkl')\n        with open(labels_path, 'wb') as f:\n            pickle.dump(labels, f, protocol=2)\n\n    return net_parcels_map_nifti, coords, labels, atlas, uatlas\n"
    ],
    [
        "labels",
        [
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan",
            "nan"
        ]
    ],
    [
        "par_max",
        96
    ],
    [
        "parc",
        false
    ],
    [
        "parcel_list",
        null
    ],
    [
        "roi",
        null
    ],
    [
        "uatlas",
        [
            "/Users/derekpisner/Applications/PyNets/pynets/atlases/DesikanKlein2012.nii.gz",
            "8b05327694ff8612e04249dae9d49822"
        ]
    ]
]