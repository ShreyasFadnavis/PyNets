[
    [
        "ID",
        "002"
    ],
    [
        "binary",
        false
    ],
    [
        "conn_model",
        "partcorr"
    ],
    [
        "est_path",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/fmri/coords_dosenbach_2010/graphs/002_est_partcorr_0.2prop_4mm_func.npy",
            "9ae9e4a4756ab23449ced576fcfdcd4d"
        ]
    ],
    [
        "function_str",
        "def pass_meta_ins(conn_model, est_path, network, node_size, thr, prune, ID, roi, norm, binary):\n    \"\"\"\n    Passes parameters as metadata.\n\n    Parameters\n    ----------\n    conn_model : str\n       Connectivity estimation model (e.g. corr for correlation, cov for covariance, sps for precision covariance,\n       partcorr for partial correlation). sps type is used by default.\n    est_path : str\n        File path to .npy file containing graph with thresholding applied.\n    network : str\n        Resting-state network based on Yeo-7 and Yeo-17 naming (e.g. 'Default') used to filter nodes in the study of\n        brain subgraphs.\n    node_size : int\n        Spherical centroid node size in the case that coordinate-based centroids\n        are used as ROI's.\n    thr : float\n        A value, between 0 and 1, to threshold the graph using any variety of methods\n        triggered through other options.\n    prune : bool\n        Indicates whether to prune final graph of disconnected nodes/isolates.\n    ID : str\n        A subject id or other unique identifier.\n    roi : str\n        File path to binarized/boolean region-of-interest Nifti1Image file.\n    norm : int\n        Indicates method of normalizing resulting graph.\n    binary : bool\n        Indicates whether to binarize resulting graph edges to form an\n        unweighted graph.\n\n    Returns\n    -------\n    conn_model : str\n       Connectivity estimation model (e.g. corr for correlation, cov for covariance, sps for precision covariance,\n       partcorr for partial correlation). sps type is used by default.\n    est_path : str\n        File path to .npy file containing graph with thresholding applied.\n    network : str\n        Resting-state network based on Yeo-7 and Yeo-17 naming (e.g. 'Default') used to filter nodes in the study of\n        brain subgraphs.\n    node_size : int\n        Spherical centroid node size in the case that coordinate-based centroids\n        are used as ROI's.\n    thr : float\n        A value, between 0 and 1, to threshold the graph using any variety of methods\n        triggered through other options.\n    prune : bool\n        Indicates whether to prune final graph of disconnected nodes/isolates.\n    ID : str\n        A subject id or other unique identifier.\n    roi : str\n        File path to binarized/boolean region-of-interest Nifti1Image file.\n    norm : int\n        Indicates method of normalizing resulting graph.\n    binary : bool\n        Indicates whether to binarize resulting graph edges to form an\n        unweighted graph.\n    \"\"\"\n    est_path_iterlist = est_path\n    conn_model_iterlist = conn_model\n    network_iterlist = network\n    node_size_iterlist = node_size\n    thr_iterlist = thr\n    prune_iterlist = prune\n    ID_iterlist = ID\n    roi_iterlist = roi\n    norm_iterlist = norm\n    binary_iterlist = binary\n    # print('\\n\\nParam-iters:\\n')\n    # print(conn_model_iterlist)\n    # print(est_path_iterlist)\n    # print(network_iterlist)\n    # print(node_size_iterlist)\n    # print(thr_iterlist)\n    # print(prune_iterlist)\n    # print(ID_iterlist)\n    # print(roi_iterlist)\n    # print(norm_iterlist)\n    # print(binary_iterlist)\n    # print('\\n\\n')\n    return conn_model_iterlist, est_path_iterlist, network_iterlist, node_size_iterlist, thr_iterlist, prune_iterlist, ID_iterlist, roi_iterlist, norm_iterlist, binary_iterlist\n"
    ],
    [
        "network",
        null
    ],
    [
        "node_size",
        4
    ],
    [
        "norm",
        0
    ],
    [
        "prune",
        2
    ],
    [
        "roi",
        null
    ],
    [
        "thr",
        "0.2000000000"
    ]
]