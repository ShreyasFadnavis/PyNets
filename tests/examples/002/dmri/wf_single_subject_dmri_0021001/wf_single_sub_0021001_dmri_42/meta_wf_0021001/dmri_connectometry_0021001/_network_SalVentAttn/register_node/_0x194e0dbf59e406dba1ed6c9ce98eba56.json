[
    [
        "B0_mask",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/B0_bet_mask.nii.gz",
            "98e2ee5503361bf65dbf0894e48cc224"
        ]
    ],
    [
        "anat_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/anat/std_fmri/s002_anat_brain_pre_reor_1747.nii.gz",
            "3a5287ab6937a9018f5eca6775b65268"
        ]
    ],
    [
        "basedir_path",
        "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/reg_dmri"
    ],
    [
        "dwi_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/iso_eddy_corrected_data_denoised.nii.gz",
            "a9e120f4e5bdf26be21d106086b49267"
        ]
    ],
    [
        "fa_path",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/tensor_fa.nii.gz",
            "6e7ad31c119bacaadf83cb67fd4af489"
        ]
    ],
    [
        "function_str",
        "def register_all_dwi(basedir_path, fa_path, B0_mask, anat_file, gtab_file, dwi_file, vox_size='2mm', simple=False,\n                     overwrite=True):\n    \"\"\"\n    A Function to register an atlas to T1w-warped MNI-space, and restrict the atlas to grey-matter only.\n\n    Parameters\n    ----------\n    basedir_path : str\n        Path to directory to output direct-streamline normalized temp files and outputs.\n    fa_path : str\n        File path to FA Nifti1Image.\n    B0_mask : str\n        File path to B0 brain mask.\n    anat_file : str\n        Path to a skull-stripped anatomical Nifti1Image.\n    gtab_file : str\n        File path to pickled DiPy gradient table object.\n    dwi_file : str\n        File path to diffusion weighted image.\n    vox_size : str\n        Voxel size in mm. (e.g. 2mm).\n    simple : bool\n        Indicates whether to use non-linear registration and BBR (True) or entirely linear methods (False).\n        Default is True.\n    overwrite : bool\n        Indicates whether to overwrite existing registration files. Default is True.\n\n    Returns\n    -------\n    wm_gm_int_in_dwi : st\n        Path to wm-gm interface Nifti1Image file in native diffusion space.\n    wm_in_dwi : str\n        File path to white-matter tissue segmentation Nifti1Image in native diffusion space.\n    gm_in_dwi : str\n        File path to grey-matter tissue segmentation Nifti1Image in native diffusion space.\n    vent_csf_in_dwi : str\n        File path to ventricular CSF tissue segmentation Nifti1Image in native diffusion space.\n    csf_mask_dwi : str\n        File path to CSF tissue segmentation Nifti1Image in native diffusion space.\n    anat_file : str\n        Path to a skull-stripped anatomical Nifti1Image.\n    B0_mask : str\n        File path to B0 brain mask.\n    fa_path : str\n        File path to FA Nifti1Image.\n    gtab_file : str\n        File path to pickled DiPy gradient table object.\n    dwi_file : str\n        File path to diffusion weighted image.\n\n    \"\"\"\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n    import os.path as op\n    from pynets.registration import register\n    reg = register.DmriReg(basedir_path, fa_path, B0_mask, anat_file, vox_size, simple)\n\n    if (overwrite is True) or (op.isfile(reg.map_path) is False):\n        # Perform anatomical segmentation\n        reg.gen_tissue()\n\n    if (overwrite is True) or (op.isfile(reg.t1w2dwi) is False):\n        # Align t1w to dwi\n        reg.t1w2dwi_align()\n\n    if (overwrite is True) or (op.isfile(reg.wm_gm_int_in_dwi) is False):\n        # Align tissue\n        reg.tissue2dwi_align()\n\n    return reg.wm_gm_int_in_dwi, reg.wm_in_dwi, reg.gm_in_dwi, reg.vent_csf_in_dwi, reg.csf_mask_dwi, anat_file, B0_mask, fa_path, gtab_file, dwi_file\n"
    ],
    [
        "gtab_file",
        [
            "/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/gtab.pkl",
            "090f5a9c04e9749b8602a207d9704e7e"
        ]
    ]
]