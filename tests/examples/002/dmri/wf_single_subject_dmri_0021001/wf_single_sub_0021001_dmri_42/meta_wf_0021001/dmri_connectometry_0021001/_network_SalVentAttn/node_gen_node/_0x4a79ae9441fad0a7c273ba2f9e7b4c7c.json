[('ID', '0021001'), ('atlas', 'DesikanKlein2012'), ('coords', [('54.1869893869', '-35.0466519050', '36.2273803161'), ('-13.2938431774', '-67.5089336520', '-5.8789120291'), ('7.5376302586', '-24.8548822848', '58.6949054419'), ('-5.2133712660', '-18.3926031294', '39.6963015647'), ('22.6098634963', '-4.5623073536', '-31.9564068692'), ('-29.8504807002', '-89.2247094275', '1.5027263596'), ('-6.1731694281', '-25.6816319259', '57.7997505790'), ('20.5507772021', '-2.8352331606', '-0.7077720207'), ('-4.0427093760', '-57.2475809142', '-38.7594260928'), ('5.2300613497', '37.4843217451', '-17.2699386503'), ('24.1039933444', '-29.3789517471', '-18.4342762063'), ('-22.8722612650', '-5.0318313353', '-32.0425795783'), ('34.7928110244', '-43.0476052809', '-20.9995181652'), ('-35.8306627355', '12.0902448404', '47.0801179336'), ('13.6988191034', '-66.4238687428', '-5.0391890480')]), ('dir_path', '/Users/derekpisner/Applications/PyNets/tests/examples/002/dmri/DesikanKlein2012'), ('function_str', 'def node_gen(coords, parcel_list, labels, dir_path, ID, parc, atlas, uatlas):\n    """\n    In the case that masking was not applied, this function generate nodes based on atlas definitions established by\n    fetch_nodes_and_labels.\n\n    Parameters\n    ----------\n    coords : list\n        List of (x, y, z) tuples in mm-space corresponding to a coordinate atlas used or\n        which represent the center-of-mass of each parcellation node.\n    parcel_list : list\n        List of 3D boolean numpy arrays or binarized Nifti1Images corresponding to ROI masks.\n    labels : list\n        List of string labels corresponding to ROI nodes.\n    dir_path : str\n        Path to directory containing subject derivative data for given run.\n    ID : str\n        A subject id or other unique identifier.\n    parc : bool\n        Indicates whether to use parcels instead of coordinates as ROI nodes.\n    atlas : str\n        Name of a Nilearn-hosted coordinate or parcellation/label-based atlas supported for fetching.\n        See Nilearn\'s datasets.atlas module for more detailed reference.\n    uatlas : str\n        File path to atlas parcellation Nifti1Image in MNI template space.\n\n    Returns\n    -------\n    net_parcels_map_nifti : Nifti1Image\n        A nibabel-based nifti image consisting of a 3D array with integer voxel intensities corresponding to ROI\n        membership.\n    coords : list\n        List of (x, y, z) tuples in mm-space corresponding to a coordinate atlas used or\n        which represent the center-of-mass of each parcellation node.\n    labels : list\n        List of string labels corresponding to ROI nodes.\n    atlas : str\n        Name of a Nilearn-hosted coordinate or parcellation/label-based atlas supported for fetching.\n        See Nilearn\'s datasets.atlas module for more detailed reference.\n    uatlas : str\n        File path to atlas parcellation Nifti1Image in MNI template space.\n    """\n    import warnings\n    warnings.filterwarnings("ignore")\n    try:\n        import cPickle as pickle\n    except ImportError:\n        import _pickle as pickle\n    from pynets import nodemaker\n    pick_dump = False\n\n    if parc is True:\n        [net_parcels_map_nifti, _] = nodemaker.create_parcel_atlas(parcel_list)\n    else:\n        net_parcels_map_nifti = None\n        print(\'No additional roi masking...\')\n\n    coords = list(tuple(x) for x in coords)\n    if pick_dump is True:\n        # Save coords to pickle\n        coords_path = "%s%s" % (dir_path, \'/atlas_coords_wb.pkl\')\n        with open(coords_path, \'wb\') as f:\n            pickle.dump(coords, f, protocol=2)\n        # Save labels to pickle\n        labels_path = "%s%s" % (dir_path, \'/atlas_labelnames_wb.pkl\')\n        with open(labels_path, \'wb\') as f:\n            pickle.dump(labels, f, protocol=2)\n\n    return net_parcels_map_nifti, coords, labels, atlas, uatlas\n'), ('labels', ['nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan', 'nan']), ('networks_list', None), ('par_max', 96), ('parc', True), ('parcel_list', [<nibabel.nifti1.Nifti1Image object at 0xa1e8d5358>, <nibabel.nifti1.Nifti1Image object at 0xa1e8e8a20>, <nibabel.nifti1.Nifti1Image object at 0xa1e8e8ba8>, <nibabel.nifti1.Nifti1Image object at 0xa1e8e8d30>, <nibabel.nifti1.Nifti1Image object at 0xa1e8e8eb8>, <nibabel.nifti1.Nifti1Image object at 0xa1e8e8f98>, <nibabel.nifti1.Nifti1Image object at 0xa1e8df080>, <nibabel.nifti1.Nifti1Image object at 0xa1e8df160>, <nibabel.nifti1.Nifti1Image object at 0xa1e8df2e8>, <nibabel.nifti1.Nifti1Image object at 0xa1e8df470>, <nibabel.nifti1.Nifti1Image object at 0xa1e8df5f8>, <nibabel.nifti1.Nifti1Image object at 0xa1e8df780>, <nibabel.nifti1.Nifti1Image object at 0xa1e8df908>, <nibabel.nifti1.Nifti1Image object at 0xa1e8dfa90>, <nibabel.nifti1.Nifti1Image object at 0xa1e8dfc18>]), ('roi', None), ('uatlas', ('/Users/derekpisner/Applications/PyNets/pynets/atlases/DesikanKlein2012.nii.gz', '8b05327694ff8612e04249dae9d49822'))]